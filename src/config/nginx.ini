
##
## host.com
## SSL
##

server {

  	listen          443 ssl;
  	server_name     host.com;

  
   	# Запрещаем показ в iframe
   	add_header X-Frame-Options "SAMEORIGIN";
    	charset     utf-8;
    
    
	ssl_certificate       /etc/letsencrypt/live/host.com/fullchain.pem; # managed by Certbot
    	ssl_certificate_key   /etc/letsencrypt/live/host.com/privkey.pem; # managed by Certbot
    	include               /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    	ssl_dhparam           /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


  	access_log    /var/log/nginx/host.com-access.log;
  	error_log     /var/log/nginx/host.com-error.log debug;
  
  	root        /var/www/host.com;
  	index       index.php index.html;
	
  	location = /favicon.ico {
    	log_not_found off;
    	access_log off;
 	}
	
  	location = /robots.txt {
   	 	allow all;
    	log_not_found off;
    	access_log off;
  	}
    
    
    # Редиректим www и все что не server_name.
  	if ($host != $server_name){
    	return 301 $scheme://$server_name$request_uri;
  	}
    
    
    # Убираем лишнии слешы внутри url
    if ($request_uri ~* "\/\/") {
        rewrite ^/(.*)    $scheme://$host/$1    permanent;
    }
    
    
    # ~*  без учета регистра
    location ~ .*/(api|libs|compiled|config|tamplates/(.+)/html|view|modules|vendor)/.* { deny all; }
  	location ~* .*/(\.gitignore|README\.md|(.+)\.tpl|\.git) { deny all; }
    
	location ~ ^/agmin {
    
		rewrite ^/agmin/?$				/app/agmin/index.php;
        
    	location ~ \.php$ {
      		fastcgi_split_path_info ^(.+\.php)(/.+)$;
            
         	fastcgi_intercept_errors 	on;
          	fastcgi_index         		index.php;
          	include           			fcgi.conf;
          	fastcgi_pass                unix:/var/run/php/php8.1-fpm.sock;
    	}
 	}


  
  	location / {
     	# Убираем слеш вконце строки
    	rewrite ^/(.*)/$ /$1 permanent;
        
        # если файла нет, запускаем rewrite
    	try_files $uri @rewrite;
  	}

  	location @rewrite {

        # Остальное
        rewrite ^/search/([^/]+)/?$                     index.php?view=ProductsView&keyword=$1;
        rewrite ^/search/?$                             index.php?view=ProductsView;
        rewrite ^/blog/([^/]+)/?$                       index.php?view=BlogView&url=$1;
        rewrite ^/blog/?$                           	index.php?view=BlogView;
        rewrite ^/info/([^/]*)$                         index.php?view=PageView&page_url=$1;
        rewrite ^/cart/?$                               index.php?view=CartView;
        rewrite ^/cart/([^/]+)/?$                       index.php?view=CartView&add_variant=$1;
        rewrite ^/cart/remove/([^/]+)/?$                index.php?view=CartView&delete_variant=$1;
        rewrite ^/order/([^/]+)/?$                      index.php?view=OrderView&url=$1;
        rewrite ^/order/?$                              index.php?view=OrderView;
        rewrite ^/order/([^/]+)/([^/]+)/?$              index.php?view=OrderView&url=$1&file=$2;
        rewrite ^/user/login/?$                         index.php?view=LoginView;
        rewrite ^/user/register/?$                      index.php?view=RegisterView;
        rewrite ^/user/logout/?$                        index.php?view=LoginView&action=logout;
        rewrite ^/user/password-remind/?$               index.php?view=LoginView&action=password_remind;
        rewrite ^/user/password-remind/([0-9a-z]+)/?$   index.php?view=LoginView&action=password_remind&code=$1;
        rewrite ^/user/?$                          	   	index.php?view=UserView;
        rewrite ^/feedback/?$                           index.php?view=FeedbackView;

        # rest api
        rewrite ^/exchange/rest/([^/]+)$       		   	/exchange/rest/index.php?resource=$1 last;
	    rewrite ^/exchange/rest/([^/]+)/([^/]+)$	    /exchange/rest/index.php?resource=$1&id=$2 last;

        rewrite ^/sitemap.xml/?$                        /sitemap.php last;
        
        # Редирект для поиска товара
        rewrite ^/product$                              index.php?view=ProductView&redirect=true;
        rewrite ^/product/([0-9]+)$                     index.php?view=ProductView&product_id=$1&redirect=true;


        # Товар
        rewrite ^/tovar-([^/]+)$                        index.php?view=ProductView&product_id=$1;


        # Каталог
        rewrite ^/([^/]+)$                              index.php?view=ProductsView&category=$1;


        # Битые ссылки в 404
        rewrite ^/(.+)                                  index.php?view=None;
        
        rewrite ^                                 	   	/index.php?view=MainView;
    }



	# php для frontend
  	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        
    	fastcgi_intercept_errors  on;
    	fastcgi_index         	  index.php;
    	include                   fcgi.conf;
        fastcgi_pass              unix:/var/run/php/php8.1-fpm.sock;
  	}


    location /files/resize/ {
        if (!-e $request_filename){
           rewrite ^/files/resize/(.+) /src/resize_image.php?file=$1&token=$args;
        }
        expires max;
        log_not_found off;
    }
  
  
    # кешируем файлы в папке templates.  Без учета регистра png(PNG)
    location ~* .*templates/.*\.(js|css|png|jpg|jpeg|gif|ico).* {
        expires max;
        log_not_found off;
    }
}


# Редиректим на https
server {
    listen       80;
    server_name  host.com;
    
    #access_log    /var/log/nginx/host.com-access.log;
  	error_log     /var/log/nginx/host.com-error.log;

    location / {
      return 301 https://$server_name$request_uri;
    }
}